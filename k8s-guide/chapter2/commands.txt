# 获取多个Pod信息
kubectl get pods pod1 pod2

# 获取多种对象的信息
kubectl get pod/pod1 rc/rc1

# 同时应用多个yaml文件
kubectl get pod -f pod1.yaml -f pod2.yaml
kubectl create -f pod1.yaml -f rc1.yaml -f service1.yaml

# 显示Pod的更多信息
kubectl get pod <pod-name> -o wide

# 以yaml格式显示Pod的详细信息
kubectl get pod <pod-name> -o yaml

# 以自定义列名显示Pod的信息
kubectl get pod <pod-name> -o=custom-columns=NAME:.metadata.name,RSRC:.metadata.resourceVersion

# 基于文件的自定义列名输出
kubectl get pods <pod-name> -o=custom-columns-file=template.txt

template.txt文件内容为：
NAME               RSRC
metadata.name      metadata.resourceVersion
输出结果为：
NAME       RSRC
pod-name   52305

# 将输出结果按照某个字段排序
kubectl get pods --sort-by=.metadata.name

# 创建资源对象
kubectl create -f my-service.yaml -f my-rc.yaml
kubectl create -f <directory>

# 查看资源对象
kubectl get pods
kubectl get rc,service

# 描述资源对象
kubectl describe nodes <node-name>
kubectl describe pods/<pod-name>
kubectl describe pods <rc-name>

# 删除资源对象
kubectl delete -f pod.yaml
kubectl delete pods,service -l name=<label-name>
kubectl delete pods --all

# 执行容器命令
kubectl exec <pod-name> date
kubectl exec <pod-name> -c <container-name> date
kubectl exec -ti <pod-name> -c <container-name> /bin/bash

# 查看容器的日志
kubectl logs <pod-name>
kubectl logs -f <pod-name> -c <container-name>

# Guestbook示例：Hello World
kubectl create -f redis-master-controller.yaml
kubectl get rc
kubectl get pods
kubectl create -f redis-master-service.yaml
kubectl get services

kubectl create -f redis-slave-controller.yaml
kubectl get rc
kubectl get pods
kubectl create -f redis-slave-service.yaml
kubectl get services

kubectl create -f frontend-controller.yaml
kubectl get rc
kubectl get pods
kubectl create -f frontend-service.yaml
kubectl get services

# 通过浏览器访问 http://虚拟机IP:30002/

kubectl create -f frontend-localredis-pod.yaml
kubectl get pods
kubectl describe pod redis-php

kubectl create -f applogs-volume-pod.yaml
kubectl logs volume-pod -c busybox
kubectl exec -ti volume-pod -c tomcat -- ls /usr/local/tomcat/logs
kubectl exec -ti volume-pod -c tomcat -- tail /usr/local/tomcat/logs/catalina.2016-07-29.log

# ConfigMap: 容器应用的配置管理
kubectl create -f cm-appvars.yaml
kubectl get configmap
kubectl describe configmap cm-appvars
kubectl get configmap cm-appvars -o yaml

kubectl create -f cm-test-pod.yaml
kubectl get pods --show-all
kubectl logs cm-test-pod

kubectl create -f cm-appconfigfiles.yaml
kubectl get configmap
kubectl describe configmap cm-appconfigfiles
kubectl get configmap cm-appconfigfiles -o yaml

kubectl create configmap cm-server.xml --from-file=server.xml
kubectl describe configmap cm-server.xml
kubectl create configmap cm-appconf --from-file=configfiles
kubectl describe configmap cm-appconf
kubectl create configmap cm-appenv --from-literal=loglevel=info --from-literal=appdatadir=/var/data

kubectl create -f cm-test-app.yaml
kubectl exec -ti cm-test-app -- bash
> cat /configfiles/server.xml
> cat /configfiles/logging.properties

# Pod健康检查
kubectl create -f liveness-exec.yaml
kubectl get pods
kubectl create -f healthcheck-tcpsocket.yaml
kubectl get pods
kubectl create -f healthcheck-httpget.yaml
kubectl get pods

# Pod调度
kubectl label nodes k8s-node-1 zone=north
kubectl replace -f redis-master-controller.yaml
kubectl get pods -o wide

kubectl create -f fluentd-ds.yaml
kubectl get daemonset --namespace=kube-system
kubectl get pods --namespace=kube-system

# Job Template Expansion 模式
mkdir -p jobs
for i in apple banana cherry
do
  cat job.yaml.txt | sed "s/\$ITEM/$i/" > ./jobs/job-$i.yaml
done

ls jobs
kubectl create -f jobs
kubectl get jobs -l jobgroup=jobexample

# Pod 的扩容和缩容
kubectl scale rc redis-slave --replicas=3
kubectl get pods
kubectl scale rc redis-slave --replicas=1
kubectl get pods

kubectl create -f php-apache-rc.yaml
kubectl create -f php-apache-svc.yaml
kubectl autoscale rc php-apache --min=1 --max=10 --cpu-percent=50

kubectl create -f hpa-php-apache.yaml
kubectl get hpa

kubectl create -f busybox-pod.yaml
kubectl exec -ti busybox -- sh
> while true; do wget -q -O- http://php-apache > /dev/null; done
kubectl get rc

# Pod 的滚动升级
kubectl rolling-update redis-master -f redis-master-controller-v2.yaml
# 在更新过程中发现配置有误，可以中断更新，并回滚
kubectl rolling-update redis-master --rollback
# 直接通过--image参数指定新版本镜像名称完成Pod的滚动升级
kubectl rolling-update redis-master --image=kubeguide/redis-master:latest

# Service 基本用法
kubectl create -f webapp-rc.yaml
# 获得Pod的IP地址
kubectl get pods -l app=webapp -o yaml | grep podIP
# 访问Pod提供的Tomcat服务
kubectl exec -ti webapp-kzhnw -- bash
curl 10.244.1.55:8080

# 通过kubectl expose命令来创建Service
kubectl expose rc webapp --port=8080
kubectl get svc
kubectl exec -ti webapp-kzhnw -- bash
curl 10.96.178.236:8080

# 通过配置文件定义Service
kubectl delete svc webapp
kubectl create -f webapp-svc.yaml
kubectl get svc
kubectl exec -ti webapp-fcp7m -- bash
curl 10.100.254.93:8081

# Service提供两种负载均衡策略：RoundRobin (默认) 和 SessionAffinity

# 将容器应用的端口映射到物理机
kubectl create -f pod-hostport.yaml
curl 192.168.100.21:8081
